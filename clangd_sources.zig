//"${COMPLETIONMODEL_SOURCES}",
// TODO: COMPLETIONMODEL_SOURCES

pub const tool_lib_cpp_files = &.{
    "ClangdMain.cpp",
    "Check.cpp",
};

pub const tool_cpp_files = &.{
    "ClangdToolMain.cpp",
};

pub const cpp_files = &.{
    "AST.cpp",
    "ASTSignals.cpp",
    "ClangdLSPServer.cpp",
    "ClangdServer.cpp",
    "CodeComplete.cpp",
    "CodeCompletionStrings.cpp",
    "CollectMacros.cpp",
    "CompileCommands.cpp",
    "Compiler.cpp",
    "Config.cpp",
    "ConfigCompile.cpp",
    "ConfigProvider.cpp",
    "ConfigYAML.cpp",
    "DecisionForest.cpp",
    "Diagnostics.cpp",
    "DraftStore.cpp",
    "DumpAST.cpp",
    "ExpectedTypes.cpp",
    "FeatureModule.cpp",
    "Feature.cpp",
    "FindSymbols.cpp",
    "FindTarget.cpp",
    "FileDistance.cpp",
    "Format.cpp",
    "FS.cpp",
    "FuzzyMatch.cpp",
    "GlobalCompilationDatabase.cpp",
    "Headers.cpp",
    "HeaderSourceSwitch.cpp",
    "Hover.cpp",
    "IncludeCleaner.cpp",
    "IncludeFixer.cpp",
    "InlayHints.cpp",
    "JSONTransport.cpp",
    "ModulesBuilder.cpp",
    "PathMapping.cpp",
    "Protocol.cpp",
    "Quality.cpp",
    "ParsedAST.cpp",
    "Preamble.cpp",
    "RIFF.cpp",
    "ScanningProjectModules.cpp",
    "Selection.cpp",
    "SemanticHighlighting.cpp",
    "SemanticSelection.cpp",
    "SourceCode.cpp",
    "SystemIncludeExtractor.cpp",
    "TidyProvider.cpp",
    "TUScheduler.cpp",
    "URI.cpp",
    "XRefs.cpp",

    "index/Background.cpp",
    "index/BackgroundIndexLoader.cpp",
    "index/BackgroundIndexStorage.cpp",
    "index/BackgroundQueue.cpp",
    "index/BackgroundRebuild.cpp",
    "index/CanonicalIncludes.cpp",
    "index/FileIndex.cpp",
    "index/Index.cpp",
    "index/IndexAction.cpp",
    "index/MemIndex.cpp",
    "index/Merge.cpp",
    "index/ProjectAware.cpp",
    "index/Ref.cpp",
    "index/Relation.cpp",
    "index/Serialization.cpp",
    "index/StdLib.cpp",
    "index/Symbol.cpp",
    "index/SymbolCollector.cpp",
    "index/SymbolID.cpp",
    "index/SymbolLocation.cpp",
    "index/SymbolOrigin.cpp",
    "index/YAMLSerialization.cpp",

    "index/dex/Dex.cpp",
    "index/dex/Iterator.cpp",
    "index/dex/PostingList.cpp",
    "index/dex/Trigram.cpp",

    "refactor/InsertionPoint.cpp",
    "refactor/Rename.cpp",
    "refactor/Tweak.cpp",
};

pub const clangd_support_lib_cpp_files = &.{
    "Bracket.cpp",
    "Cancellation.cpp",
    "Context.cpp",
    "DirectiveTree.cpp",
    "FileCache.cpp",
    "Lex.cpp",
    "Logger.cpp",
    "Markup.cpp",
    "MemoryTree.cpp",
    "Path.cpp",
    "Shutdown.cpp",
    "ThreadCrashReporter.cpp",
    "Threading.cpp",
    "ThreadsafeFS.cpp",
    "Token.cpp",
    "Trace.cpp",
};

pub const clang_tidy_lib_cpp_files = &.{
    "ClangTidy.cpp",
    "ClangTidyCheck.cpp",
    "ClangTidyModule.cpp",
    "ClangTidyDiagnosticConsumer.cpp",
    "ClangTidyOptions.cpp",
    "ClangTidyProfiling.cpp",
    "ExpandModularHeadersPPCallbacks.cpp",
    "GlobList.cpp",
    "NoLintDirectiveHandler.cpp",
};

pub const clang_tidy_utils_lib_cpp_files = &.{
    "Aliasing.cpp",
    "ASTUtils.cpp",
    "BracesAroundStatement.cpp",
    "DeclRefExprUtils.cpp",
    "DesignatedInitializers.cpp",
    "ExceptionAnalyzer.cpp",
    "ExceptionSpecAnalyzer.cpp",
    "ExprSequence.cpp",
    "FileExtensionsUtils.cpp",
    "FormatStringConverter.cpp",
    "FixItHintUtils.cpp",
    "HeaderGuard.cpp",
    "IncludeInserter.cpp",
    "IncludeSorter.cpp",
    "LexerUtils.cpp",
    "Matchers.cpp",
    "NamespaceAliaser.cpp",
    "OptionsUtils.cpp",
    "RenamerClangTidyCheck.cpp",
    "TransformerClangTidyCheck.cpp",
    "TypeTraits.cpp",
    "UseRangesCheck.cpp",
    "UsingInserter.cpp",
};

pub const lldb_tablegen_cpp_files = &.{
    "LLDBOptionDefEmitter.cpp",
    "LLDBPropertyDefEmitter.cpp",
    "LLDBTableGen.cpp",
    "LLDBTableGenUtils.cpp",
};

pub const clang_tablegen_cpp_files = &.{
    "ASTTableGen.cpp",
    "ClangASTNodesEmitter.cpp",
    "ClangASTPropertiesEmitter.cpp",
    "ClangAttrEmitter.cpp",
    "ClangBuiltinsEmitter.cpp",
    "ClangCommentCommandInfoEmitter.cpp",
    "ClangCommentHTMLNamedCharacterReferenceEmitter.cpp",
    "ClangCommentHTMLTagsEmitter.cpp",
    "ClangDataCollectorsEmitter.cpp",
    "ClangDiagnosticsEmitter.cpp",
    "ClangOpcodesEmitter.cpp",
    "ClangOpenCLBuiltinEmitter.cpp",
    "ClangOptionDocEmitter.cpp",
    "ClangSACheckersEmitter.cpp",
    "ClangSyntaxEmitter.cpp",
    "ClangTypeNodesEmitter.cpp",
    "MveEmitter.cpp",
    "NeonEmitter.cpp",
    "RISCVVEmitter.cpp",
    "SveEmitter.cpp",
    "TableGen.cpp",
};

pub const clang_support_lib_cpp_files = &.{
    "RISCVVIntrinsicUtils.cpp",
};

pub const clang_ast_lib_cpp_files = &.{
    "APValue.cpp",
    "ASTConcept.cpp",
    "ASTConsumer.cpp",
    "ASTContext.cpp",
    "ASTDiagnostic.cpp",
    "ASTDumper.cpp",
    "ASTImporter.cpp",
    "ASTImporterLookupTable.cpp",
    "ASTStructuralEquivalence.cpp",
    "ASTTypeTraits.cpp",
    "AttrDocTable.cpp",
    "AttrImpl.cpp",
    "Availability.cpp",
    "Comment.cpp",
    "CommentBriefParser.cpp",
    "CommentCommandTraits.cpp",
    "CommentLexer.cpp",
    "CommentParser.cpp",
    "CommentSema.cpp",
    "ComparisonCategories.cpp",
    "ComputeDependence.cpp",
    "CXXInheritance.cpp",
    "DataCollection.cpp",
    "Decl.cpp",
    "DeclarationName.cpp",
    "DeclBase.cpp",
    "DeclCXX.cpp",
    "DeclFriend.cpp",
    "DeclGroup.cpp",
    "DeclObjC.cpp",
    "DeclOpenMP.cpp",
    "DeclPrinter.cpp",
    "DeclTemplate.cpp",
    "DynamicRecursiveASTVisitor.cpp",
    "ParentMapContext.cpp",
    "Expr.cpp",
    "ExprClassification.cpp",
    "ExprConcepts.cpp",
    "ExprConstant.cpp",
    "ExprCXX.cpp",
    "ExprObjC.cpp",
    "ExternalASTMerger.cpp",
    "ExternalASTSource.cpp",
    "FormatString.cpp",
    "InheritViz.cpp",
    "ByteCode/BitcastBuffer.cpp",
    "ByteCode/ByteCodeEmitter.cpp",
    "ByteCode/Compiler.cpp",
    "ByteCode/Context.cpp",
    "ByteCode/Descriptor.cpp",
    "ByteCode/Disasm.cpp",
    "ByteCode/EvalEmitter.cpp",
    "ByteCode/Frame.cpp",
    "ByteCode/Function.cpp",
    "ByteCode/FunctionPointer.cpp",
    "ByteCode/InterpBuiltin.cpp",
    "ByteCode/InterpBuiltinBitCast.cpp",
    "ByteCode/Floating.cpp",
    "ByteCode/EvaluationResult.cpp",
    "ByteCode/DynamicAllocator.cpp",
    "ByteCode/Interp.cpp",
    "ByteCode/InterpBlock.cpp",
    "ByteCode/InterpFrame.cpp",
    "ByteCode/InterpStack.cpp",
    "ByteCode/InterpState.cpp",
    "ByteCode/Pointer.cpp",
    "ByteCode/PrimType.cpp",
    "ByteCode/Program.cpp",
    "ByteCode/Record.cpp",
    "ByteCode/Source.cpp",
    "ByteCode/State.cpp",
    "ByteCode/MemberPointer.cpp",
    "ByteCode/InterpShared.cpp",
    "ItaniumCXXABI.cpp",
    "ItaniumMangle.cpp",
    "JSONNodeDumper.cpp",
    "Mangle.cpp",
    "MicrosoftCXXABI.cpp",
    "MicrosoftMangle.cpp",
    "NestedNameSpecifier.cpp",
    "NSAPI.cpp",
    "ODRDiagsEmitter.cpp",
    "ODRHash.cpp",
    "OpenACCClause.cpp",
    "OpenMPClause.cpp",
    "OSLog.cpp",
    "ParentMap.cpp",
    "PrintfFormatString.cpp",
    "QualTypeNames.cpp",
    "Randstruct.cpp",
    "RawCommentList.cpp",
    "RecordLayout.cpp",
    "RecordLayoutBuilder.cpp",
    "ScanfFormatString.cpp",
    "SelectorLocationsKind.cpp",
    "Stmt.cpp",
    "StmtCXX.cpp",
    "StmtIterator.cpp",
    "StmtObjC.cpp",
    "StmtOpenACC.cpp",
    "StmtOpenMP.cpp",
    "StmtPrinter.cpp",
    "StmtProfile.cpp",
    "StmtViz.cpp",
    "TemplateBase.cpp",
    "TemplateName.cpp",
    "TextNodeDumper.cpp",
    "Type.cpp",
    "TypeLoc.cpp",
    "TypePrinter.cpp",
    "VTableBuilder.cpp",
    "VTTBuilder.cpp",
};

pub const clang_basic_lib_cpp_files = &.{
    "ASTSourceDescriptor.cpp",
    "Attributes.cpp",
    "Builtins.cpp",
    "CLWarnings.cpp",
    "CharInfo.cpp",
    "CodeGenOptions.cpp",
    "Cuda.cpp",
    "DarwinSDKInfo.cpp",
    "Diagnostic.cpp",
    "DiagnosticIDs.cpp",
    "DiagnosticOptions.cpp",
    "ExpressionTraits.cpp",
    "FileEntry.cpp",
    "FileManager.cpp",
    "FileSystemStatCache.cpp",
    "IdentifierTable.cpp",
    "LangOptions.cpp",
    "LangStandards.cpp",
    "MakeSupport.cpp",
    "Module.cpp",
    "ObjCRuntime.cpp",
    "OpenCLOptions.cpp",
    "OpenMPKinds.cpp",
    "OperatorPrecedence.cpp",
    "ParsedAttrInfo.cpp",
    "ProfileList.cpp",
    "NoSanitizeList.cpp",
    "SanitizerSpecialCaseList.cpp",
    "Sanitizers.cpp",
    "Sarif.cpp",
    "SourceLocation.cpp",
    "SourceManager.cpp",
    "SourceMgrAdapter.cpp",
    "Stack.cpp",
    "StackExhaustionHandler.cpp",
    "TargetID.cpp",
    "TargetInfo.cpp",
    "Targets.cpp",
    "Targets/AArch64.cpp",
    "Targets/AMDGPU.cpp",
    "Targets/ARC.cpp",
    "Targets/ARM.cpp",
    "Targets/AVR.cpp",
    "Targets/BPF.cpp",
    "Targets/CSKY.cpp",
    "Targets/DirectX.cpp",
    "Targets/Hexagon.cpp",
    "Targets/Lanai.cpp",
    "Targets/LoongArch.cpp",
    "Targets/M68k.cpp",
    "Targets/MSP430.cpp",
    "Targets/Mips.cpp",
    "Targets/NVPTX.cpp",
    "Targets/OSTargets.cpp",
    "Targets/PNaCl.cpp",
    "Targets/PPC.cpp",
    "Targets/RISCV.cpp",
    "Targets/SPIR.cpp",
    "Targets/Sparc.cpp",
    "Targets/SystemZ.cpp",
    "Targets/TCE.cpp",
    "Targets/VE.cpp",
    "Targets/WebAssembly.cpp",
    "Targets/X86.cpp",
    "Targets/XCore.cpp",
    "Targets/Xtensa.cpp",
    "TokenKinds.cpp",
    "TypeTraits.cpp",
    "Version.cpp",
    "Warnings.cpp",
    "XRayInstr.cpp",
    "XRayLists.cpp",
};

pub const clang_lex_lib_cpp_files = &.{
    "DependencyDirectivesScanner.cpp",
    "HeaderMap.cpp",
    "HeaderSearch.cpp",
    "InitHeaderSearch.cpp",
    "Lexer.cpp",
    "LiteralSupport.cpp",
    "MacroArgs.cpp",
    "MacroInfo.cpp",
    "ModuleMap.cpp",
    "PPCaching.cpp",
    "PPCallbacks.cpp",
    "PPConditionalDirectiveRecord.cpp",
    "PPDirectives.cpp",
    "PPExpressions.cpp",
    "PPLexerChange.cpp",
    "PPMacroExpansion.cpp",
    "Pragma.cpp",
    "PreprocessingRecord.cpp",
    "Preprocessor.cpp",
    "PreprocessorLexer.cpp",
    "ScratchBuffer.cpp",
    "TokenConcatenation.cpp",
    "TokenLexer.cpp",
};

pub const clang_ast_matchers_lib_cpp_files = &.{
    "ASTMatchFinder.cpp",
    "ASTMatchersInternal.cpp",
    "GtestMatchers.cpp",
};

pub const clang_driver_lib_cpp_files = &.{
    "Action.cpp",
    "Compilation.cpp",
    "Distro.cpp",
    "Driver.cpp",
    "DriverOptions.cpp",
    "Job.cpp",
    "Multilib.cpp",
    "MultilibBuilder.cpp",
    "OffloadBundler.cpp",
    "OptionUtils.cpp",
    "Phases.cpp",
    "SanitizerArgs.cpp",
    "Tool.cpp",
    "ToolChain.cpp",
    "ToolChains/Arch/AArch64.cpp",
    "ToolChains/Arch/ARM.cpp",
    "ToolChains/Arch/CSKY.cpp",
    "ToolChains/Arch/LoongArch.cpp",
    "ToolChains/Arch/M68k.cpp",
    "ToolChains/Arch/Mips.cpp",
    "ToolChains/Arch/PPC.cpp",
    "ToolChains/Arch/RISCV.cpp",
    "ToolChains/Arch/Sparc.cpp",
    "ToolChains/Arch/SystemZ.cpp",
    "ToolChains/Arch/VE.cpp",
    "ToolChains/Arch/X86.cpp",
    "ToolChains/AIX.cpp",
    "ToolChains/AMDGPU.cpp",
    "ToolChains/AMDGPUOpenMP.cpp",
    "ToolChains/AVR.cpp",
    "ToolChains/BareMetal.cpp",
    "ToolChains/Clang.cpp",
    "ToolChains/CommonArgs.cpp",
    "ToolChains/CrossWindows.cpp",
    "ToolChains/CSKYToolChain.cpp",
    "ToolChains/Cuda.cpp",
    "ToolChains/Darwin.cpp",
    "ToolChains/DragonFly.cpp",
    "ToolChains/Flang.cpp",
    "ToolChains/FreeBSD.cpp",
    "ToolChains/Fuchsia.cpp",
    "ToolChains/Gnu.cpp",
    "ToolChains/Haiku.cpp",
    "ToolChains/HIPUtility.cpp",
    "ToolChains/HIPAMD.cpp",
    "ToolChains/HIPSPV.cpp",
    "ToolChains/Hexagon.cpp",
    "ToolChains/HLSL.cpp",
    "ToolChains/Hurd.cpp",
    "ToolChains/Linux.cpp",
    "ToolChains/MipsLinux.cpp",
    "ToolChains/MinGW.cpp",
    "ToolChains/MSP430.cpp",
    "ToolChains/MSVC.cpp",
    "ToolChains/NaCl.cpp",
    "ToolChains/NetBSD.cpp",
    "ToolChains/OHOS.cpp",
    "ToolChains/OpenBSD.cpp",
    "ToolChains/PS4CPU.cpp",
    "ToolChains/RISCVToolchain.cpp",
    "ToolChains/Solaris.cpp",
    "ToolChains/SPIRV.cpp",
    "ToolChains/SPIRVOpenMP.cpp",
    "ToolChains/SYCL.cpp",
    "ToolChains/TCE.cpp",
    "ToolChains/UEFI.cpp",
    "ToolChains/VEToolchain.cpp",
    "ToolChains/WebAssembly.cpp",
    "ToolChains/XCore.cpp",
    "ToolChains/PPCLinux.cpp",
    "ToolChains/PPCFreeBSD.cpp",
    "ToolChains/InterfaceStubs.cpp",
    "ToolChains/ZOS.cpp",
    "Types.cpp",
    "XRayArgs.cpp",
};

pub const clang_format_lib_cpp_files = &.{
    "AffectedRangeManager.cpp",
    "BreakableToken.cpp",
    "ContinuationIndenter.cpp",
    "DefinitionBlockSeparator.cpp",
    "Format.cpp",
    "FormatToken.cpp",
    "FormatTokenLexer.cpp",
    "IntegerLiteralSeparatorFixer.cpp",
    "MacroCallReconstructor.cpp",
    "MacroExpander.cpp",
    "MatchFilePath.cpp",
    "NamespaceEndCommentsFixer.cpp",
    "ObjCPropertyAttributeOrderFixer.cpp",
    "QualifierAlignmentFixer.cpp",
    "SortJavaScriptImports.cpp",
    "TokenAnalyzer.cpp",
    "TokenAnnotator.cpp",
    "UnwrappedLineFormatter.cpp",
    "UnwrappedLineParser.cpp",
    "UsingDeclarationsSorter.cpp",
    "WhitespaceManager.cpp",
};

pub const clang_tooling_core_lib_cpp_files = &.{
    "Diagnostic.cpp",
    "Replacement.cpp",
};

pub const clang_rewrite_lib_cpp_files = &.{
    "HTMLRewrite.cpp",
    "Rewriter.cpp",
    "TokenRewriter.cpp",
};

pub const clang_tooling_inclusions_lib_cpp_files = &.{
    "HeaderAnalysis.cpp",
    "HeaderIncludes.cpp",
    "IncludeStyle.cpp",
};

pub const clang_tooling_dependency_scanning_lib_cpp_files = &.{
    "DependencyScanningFilesystem.cpp",
    "DependencyScanningService.cpp",
    "DependencyScanningWorker.cpp",
    "DependencyScanningTool.cpp",
    "ModuleDepCollector.cpp",
};

pub const clang_frontend_lib_cpp_files = &.{
    "ASTConsumers.cpp",
    "ASTMerge.cpp",
    "ASTUnit.cpp",
    "ChainedDiagnosticConsumer.cpp",
    "ChainedIncludesSource.cpp",
    "CompilerInstance.cpp",
    "CompilerInvocation.cpp",
    "CreateInvocationFromCommandLine.cpp",
    "DependencyFile.cpp",
    "DependencyGraph.cpp",
    "DiagnosticRenderer.cpp",
    "FrontendAction.cpp",
    "FrontendActions.cpp",
    "FrontendOptions.cpp",
    "HeaderIncludeGen.cpp",
    "InitPreprocessor.cpp",
    "LayoutOverrideSource.cpp",
    "LogDiagnosticPrinter.cpp",
    "ModuleDependencyCollector.cpp",
    "MultiplexConsumer.cpp",
    "PrecompiledPreamble.cpp",
    "PrintPreprocessedOutput.cpp",
    "SARIFDiagnostic.cpp",
    "SARIFDiagnosticPrinter.cpp",
    "SerializedDiagnosticPrinter.cpp",
    "SerializedDiagnosticReader.cpp",
    "TestModuleFileExtension.cpp",
    "TextDiagnostic.cpp",
    "TextDiagnosticBuffer.cpp",
    "TextDiagnosticPrinter.cpp",
    "VerifyDiagnosticConsumer.cpp",
    "InterfaceStubFunctionsConsumer.cpp",
};

pub const clang_api_notes_lib_cpp_files = &.{
    "APINotesManager.cpp",
    "APINotesReader.cpp",
    "APINotesTypes.cpp",
    "APINotesWriter.cpp",
    "APINotesYAMLCompiler.cpp",
};

pub const clang_edit_lib_cpp_files = &.{
    "Commit.cpp",
    "EditedSource.cpp",
    "RewriteObjCFoundationAPI.cpp",
};

pub const clang_parse_lib_cpp_files = &.{
    "ParseAST.cpp",
    "ParseCXXInlineMethods.cpp",
    "ParseDecl.cpp",
    "ParseDeclCXX.cpp",
    "ParseExpr.cpp",
    "ParseExprCXX.cpp",
    "ParseHLSL.cpp",
    "ParseInit.cpp",
    "ParseObjc.cpp",
    "ParseOpenMP.cpp",
    "ParsePragma.cpp",
    "ParseStmt.cpp",
    "ParseStmtAsm.cpp",
    "ParseTemplate.cpp",
    "ParseTentative.cpp",
    "Parser.cpp",
    "ParseOpenACC.cpp",
};

pub const clang_sema_lib_cpp_files = &.{
    "AnalysisBasedWarnings.cpp",
    "CheckExprLifetime.cpp",
    "CodeCompleteConsumer.cpp",
    "DeclSpec.cpp",
    "DelayedDiagnostic.cpp",
    "HeuristicResolver.cpp",
    "HLSLExternalSemaSource.cpp",
    "IdentifierResolver.cpp",
    "JumpDiagnostics.cpp",
    "MultiplexExternalSemaSource.cpp",
    "ParsedAttr.cpp",
    "Scope.cpp",
    "ScopeInfo.cpp",
    "Sema.cpp",
    "SemaAMDGPU.cpp",
    "SemaARM.cpp",
    "SemaAVR.cpp",
    "SemaAccess.cpp",
    "SemaAttr.cpp",
    "SemaAPINotes.cpp",
    "SemaAvailability.cpp",
    "SemaBPF.cpp",
    "SemaBase.cpp",
    "SemaBoundsSafety.cpp",
    "SemaCXXScopeSpec.cpp",
    "SemaCast.cpp",
    "SemaChecking.cpp",
    "SemaCodeComplete.cpp",
    "SemaConcept.cpp",
    "SemaConsumer.cpp",
    "SemaCoroutine.cpp",
    "SemaCUDA.cpp",
    "SemaDecl.cpp",
    "SemaDeclAttr.cpp",
    "SemaDeclCXX.cpp",
    "SemaDeclObjC.cpp",
    "SemaExceptionSpec.cpp",
    "SemaExpr.cpp",
    "SemaExprCXX.cpp",
    "SemaExprMember.cpp",
    "SemaExprObjC.cpp",
    "SemaFixItUtils.cpp",
    "SemaFunctionEffects.cpp",
    "SemaHLSL.cpp",
    "SemaHexagon.cpp",
    "SemaInit.cpp",
    "SemaLambda.cpp",
    "SemaLookup.cpp",
    "SemaLoongArch.cpp",
    "SemaM68k.cpp",
    "SemaMIPS.cpp",
    "SemaMSP430.cpp",
    "SemaModule.cpp",
    "SemaNVPTX.cpp",
    "SemaObjC.cpp",
    "SemaObjCProperty.cpp",
    "SemaOpenACC.cpp",
    "SemaOpenACCClause.cpp",
    "SemaOpenCL.cpp",
    "SemaOpenMP.cpp",
    "SemaOverload.cpp",
    "SemaPPC.cpp",
    "SemaPseudoObject.cpp",
    "SemaRISCV.cpp",
    "SemaStmt.cpp",
    "SemaStmtAsm.cpp",
    "SemaStmtAttr.cpp",
    "SemaSPIRV.cpp",
    "SemaSYCL.cpp",
    "SemaSwift.cpp",
    "SemaSystemZ.cpp",
    "SemaTemplate.cpp",
    "SemaTemplateDeduction.cpp",
    "SemaTemplateDeductionGuide.cpp",
    "SemaTemplateInstantiate.cpp",
    "SemaTemplateInstantiateDecl.cpp",
    "SemaTemplateVariadic.cpp",
    "SemaType.cpp",
    "SemaWasm.cpp",
    "SemaX86.cpp",
    "TypeLocBuilder.cpp",
};

pub const clang_analysis_lib_cpp_files = &.{
    "AnalysisDeclContext.cpp",
    "BodyFarm.cpp",
    "CalledOnceCheck.cpp",
    "CFG.cpp",
    "CFGReachabilityAnalysis.cpp",
    "CFGStmtMap.cpp",
    "CallGraph.cpp",
    "CloneDetection.cpp",
    "CocoaConventions.cpp",
    "ConstructionContext.cpp",
    "Consumed.cpp",
    "CodeInjector.cpp",
    "Dominators.cpp",
    "ExprMutationAnalyzer.cpp",
    "IntervalPartition.cpp",
    "IssueHash.cpp",
    "LiveVariables.cpp",
    "MacroExpansionContext.cpp",
    "ObjCNoReturn.cpp",
    "PathDiagnostic.cpp",
    "PostOrderCFGView.cpp",
    "ProgramPoint.cpp",
    "ReachableCode.cpp",
    "RetainSummaryManager.cpp",
    "ThreadSafety.cpp",
    "ThreadSafetyCommon.cpp",
    "ThreadSafetyLogical.cpp",
    "ThreadSafetyTIL.cpp",
    "UninitializedValues.cpp",
    "UnsafeBufferUsage.cpp",
};

pub const clang_serialization_lib_cpp_files = &.{
    "ASTCommon.cpp",
    "ASTReader.cpp",
    "ASTReaderDecl.cpp",
    "ASTReaderStmt.cpp",
    "ASTWriter.cpp",
    "ASTWriterDecl.cpp",
    "ASTWriterStmt.cpp",
    "GeneratePCH.cpp",
    "GlobalModuleIndex.cpp",
    "InMemoryModuleCache.cpp",
    "ModuleFile.cpp",
    "ModuleFileExtension.cpp",
    "ModuleManager.cpp",
    "PCHContainerOperations.cpp",
    "ObjectFilePCHContainerReader.cpp",
    "TemplateArgumentHasher.cpp",
};

pub const clang_tooling_lib_cpp_files = &.{
    "AllTUsExecution.cpp",
    "ArgumentsAdjusters.cpp",
    "CommonOptionsParser.cpp",
    "CompilationDatabase.cpp",
    "Execution.cpp",
    "ExpandResponseFilesCompilationDatabase.cpp",
    "FileMatchTrie.cpp",
    "FixIt.cpp",
    "GuessTargetAndModeCompilationDatabase.cpp",
    "InterpolatingCompilationDatabase.cpp",
    "JSONCompilationDatabase.cpp",
    "LocateToolCompilationDatabase.cpp",
    "Refactoring.cpp",
    "RefactoringCallbacks.cpp",
    "StandaloneExecution.cpp",
    "Tooling.cpp",
};

pub const clang_index_lib_cpp_files = &.{
    "CommentToXML.cpp",
    "FileIndexRecord.cpp",
    "IndexBody.cpp",
    "IndexDecl.cpp",
    "IndexingAction.cpp",
    "IndexingContext.cpp",
    "IndexSymbol.cpp",
    "IndexTypeSourceInfo.cpp",
    "USRGeneration.cpp",
};

pub const clang_tooling_syntax_lib_cpp_files = &.{
    "BuildTree.cpp",
    "ComputeReplacements.cpp",
    "Nodes.cpp",
    "Mutations.cpp",
    "TokenBufferTokenManager.cpp",
    "Synthesis.cpp",
    "Tokens.cpp",
    "Tree.cpp",
};

pub const clang_tooling_inclusions_stdlib_lib_cpp_files = &.{
    "StandardLibrary.cpp",
};

pub const clang_tooling_transformer_lib_cpp_files = &.{
    "Parsing.cpp",
    "RangeSelector.cpp",
    "RewriteRule.cpp",
    "SourceCode.cpp",
    "SourceCodeBuilders.cpp",
    "Stencil.cpp",
    "Transformer.cpp",
};

pub const clang_tooling_refactoring_lib_cpp_files = &.{
    "ASTSelection.cpp",
    "ASTSelectionRequirements.cpp",
    "AtomicChange.cpp",
    "Extract/Extract.cpp",
    "Extract/SourceExtraction.cpp",
    "Lookup.cpp",
    "RefactoringActions.cpp",
    "Rename/RenamingAction.cpp",
    "Rename/SymbolOccurrences.cpp",
    "Rename/USRFinder.cpp",
    "Rename/USRFindingAction.cpp",
    "Rename/USRLocFinder.cpp",
};

pub const clang_tooling_extra_include_cleaner_lib_cpp_files = &.{
    "Analysis.cpp",
    "IncludeSpeller.cpp",
    "FindHeaders.cpp",
    "HTMLReport.cpp",
    "LocateSymbol.cpp",
    "Record.cpp",
    "Types.cpp",
    "WalkAST.cpp",
};

pub const clang_analysis_flow_sensitive_lib_cpp_files = &.{
    "AdornedCFG.cpp",
    "Arena.cpp",
    "ASTOps.cpp",
    "CNFFormula.cpp",
    "DataflowAnalysisContext.cpp",
    "DataflowEnvironment.cpp",
    "Formula.cpp",
    "HTMLLogger.cpp",
    "Logger.cpp",
    "RecordOps.cpp",
    "SimplifyConstraints.cpp",
    "SmartPointerAccessorCaching.cpp",
    "Transfer.cpp",
    "TypeErasedDataflowAnalysis.cpp",
    "Value.cpp",
    "WatchedLiteralsSolver.cpp",
    "DebugSupport.cpp",
};

pub const clang_analysis_flow_sensitive_models_lib_cpp_files = &.{
    "ChromiumCheckModel.cpp",
    "UncheckedOptionalAccessModel.cpp",
};
